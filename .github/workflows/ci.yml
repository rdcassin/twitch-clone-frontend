name: 🚀 Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-format:
    name: 🧹 Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Generate Prisma client
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma generate

      - name: 🔍 Run code quality checks
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          LIVEKIT_URL: ${{ secrets.LIVEKIT_URL }}
          LIVEKIT_API_KEY: ${{ secrets.LIVEKIT_API_KEY }}
          LIVEKIT_API_SECRET: ${{ secrets.LIVEKIT_API_SECRET }}
        run: npm run ci:local

  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Generate Prisma client
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma generate

      - name: 🐳 Build Docker image
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          LIVEKIT_URL: ${{ secrets.LIVEKIT_URL }}
          LIVEKIT_API_KEY: ${{ secrets.LIVEKIT_API_KEY }}
          LIVEKIT_API_SECRET: ${{ secrets.LIVEKIT_API_SECRET }}
        run: npm run docker:build:ci

      - name: ✅ Verify Docker image runs
        run: docker run --rm -d --name test-app twitch-clone-frontend && sleep 3 && docker logs test-app && docker stop test-app

      - name: 🧹 Clean up Docker resources
        if: always()
        run: npm run docker:clean
