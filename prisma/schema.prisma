// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  imageUrl  String   @db.Text
  clerkId   String   @unique
  bio       String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userFollowing Follow[] @relation("UserFollowing")
  userFollowers Follow[] @relation("UserFollowers")

  userBlocking Block[] @relation("UserBlocking")
  userBlocked  Block[] @relation("UserBlocked")
}

model Follow {
  id          String   @id @default(uuid())
  followerId  String // User doing the following
  followingId String // User being followed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  follower  User @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
  @@index([followerId]) // Fast lookup: "Who does this user follow?"
  @@index([followingId]) // Fast lookup: "Who follows this user?"
  @@map("follows")
}

model Block {
  id        String   @id @default(uuid())
  blockerId String // User doing the blocking
  blockedId String // User being blocked
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blocker User @relation("UserBlocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation("UserBlocked", fields: [blockedId], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedId]) // Prevents duplicate blocks
  @@index([blockerId]) // Fast "who do I block" queries
  @@index([blockedId]) // Fast "who blocks me" queries
  @@map("blocks")
}
